name: CI
on: [push]

jobs:
  foundry-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
          submodules: recursive
      - uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Install forge-std
        run: |
          forge install foundry-rs/forge-std --no-commit
          forge remappings > remappings.txt
      - name: Run non-Kontrol tests
        run: |
          forge test --no-match-path "src/test/kontrol/*" -vvv
      - name: Run snapshot without Kontrol tests
        run: forge snapshot --no-match-path "src/test/kontrol/*"

  formal-verification:
    runs-on: ubuntu-latest
    needs: foundry-test
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
          submodules: recursive

      # Download and Extract K Framework
      - name: Check Nix Installation
        run: |
          if ! command -v nix &> /dev/null; then
            echo "Installing nix..."
            curl -L https://install.determinate.systems/nix | sh -s -- install --no-confirm \
              --extra-conf "trusted-public-keys = cache.nixos.org-1:k-framework.cachix.org-1:k-framework-binary.cachix.org-1" \
              --extra-conf "substituters = https://cache.nixos.org https://k-framework.cachix.org"
            . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          fi
          nix --version || { echo "Nix installation failed"; exit 1; }
      - name: Install kup
        run: |
          echo "Installing kup..."
          nix profile install github:runtimeverification/kup#kup \
            --option extra-substituters 'https://k-framework.cachix.org' \
            --option extra-trusted-public-keys 'k-framework.cachix.org-1:jeyMXB2h28gpNRjuVkehg+zLj62ma1RnyyopA/20yFE=' \
            --experimental-features 'nix-command flakes'

          # Add kup to PATH
          export PATH="/nix/var/nix/profiles/per-user/$USER/profile/bin:$PATH"
          which kup || { echo "kup not found in PATH after installation"; exit 1; }
      - name: Download K Framework
        env:
          REPOSITORY_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
        run: |
          echo "Downloading K Framework..."
          curl -H "Authorization: token $REPOSITORY_TOKEN" https://kframework.org/install
          echo "Checking for kup..."
          find /nix -name kup || echo "kup not found"
          nix profile list --experimental-features 'nix-command flakes' || echo "No kup profile installed"

          kup install kontrol

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH=$HOME/.local/bin:$PATH
          poetry --version





